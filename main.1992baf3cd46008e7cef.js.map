{"version":3,"sources":["webpack:///./index.js"],"names":["delay","ms","Promise","res","setTimeout","logger","time","console","log","document","querySelector","addEventListener","then","toggleUserState","allUsers","userName","updatedUsers","map","user","name","active","resolve","logger2","table","users","makeTransaction","transaction","reject","min","max","Math","floor","random","id","logSuccess","logError","warn","amount","catch"],"mappings":"qMAIMA,EAAQ,SAAAC,GAAE,OAAI,IAAIC,SAAQ,SAAAC,GAAG,OAAIC,YAAW,kBAAMD,EAAIF,KAAKA,OAE3DI,EAAS,SAAAC,GAAI,OAAIC,QAAQC,IAAR,kBAA8BF,EAA9B,OAGvBG,SAASC,cAAc,aAAaC,iBAAiB,SAAS,WAC5DX,EAAM,KAAMY,KAAKP,GACjBL,EAAM,KAAMY,KAAKP,GACjBL,EAAM,MAAMY,KAAKP,MAOnB,IAAMQ,EAAkB,SAACC,EAAUC,GACjC,IAAMC,EAAeF,EAASG,KAAI,SAAAC,GAAI,OACpCA,EAAKC,OAASJ,EAAd,iBAA8BG,EAA9B,CAAoCE,QAASF,EAAKE,SAAWF,KAG/D,OAAOhB,QAAQmB,QAAQL,IAGnBM,EAAU,SAAAN,GAAY,OAAIT,QAAQgB,MAAMP,IAG9CP,SAASC,cAAc,aAAaC,iBAAiB,SAAS,WAC5DE,EAAgBW,EAAO,SAASZ,KAAKU,GACrCT,EAAgBW,EAAO,OAAOZ,KAAKU,MAKrC,IAIMG,EAAkB,SAAAC,GACtB,OAAO,IAAIxB,SAAQ,SAACmB,EAASM,GAC3B,IAN+BC,EAAKC,EAM9B7B,GANyB4B,EAMS,IANJC,EAMS,IALxCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAOlDxB,YAAW,WACU0B,KAAKE,SAAW,IAGjCX,EAAQ,CAAEY,GAAIP,EAAYO,GAAI3B,KAAMN,IAEtC2B,EAAOD,EAAYO,MAClBjC,OAIDkC,EAAa,SAAC,GAAiB,IAAfD,EAAe,EAAfA,GAAI3B,EAAW,EAAXA,KACxBC,QAAQC,IAAR,eAA2ByB,EAA3B,iBAA8C3B,EAA9C,OAGI6B,EAAW,SAAAF,GACf1B,QAAQ6B,KAAR,gCAA6CH,EAA7C,8BAIFxB,SAASC,cAAc,aAAaC,iBAAiB,SAAS,WAC5Dc,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,MAAOzB,KAAKsB,GAAYI,MAAMH,GAChEV,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,MAAOzB,KAAKsB,GAAYI,MAAMH,GAChEV,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,KAAMzB,KAAKsB,GAAYI,MAAMH,GAC/DV,EAAgB,CAAEQ,GAAI,GAAII,OAAQ,MAAOzB,KAAKsB,GAAYI,MAAMH,O","file":"main.1992baf3cd46008e7cef.js","sourcesContent":["import './styles.css';\n\n// ==================== ðŸ“Œ TASK 1 ====================\n\nconst delay = ms => new Promise(res => setTimeout(() => res(ms), ms));\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// âœ… Console checks\ndocument.querySelector('.js-task1').addEventListener('click', () => {\n  delay(2000).then(logger);\n  delay(1000).then(logger);\n  delay(1500).then(logger);\n});\n\n// ==================== ðŸ“Œ TASK 2 ====================\n\nimport users from './data/users.json';\n\nconst toggleUserState = (allUsers, userName) => {\n  const updatedUsers = allUsers.map(user =>\n    user.name === userName ? { ...user, active: !user.active } : user,\n  );\n\n  return Promise.resolve(updatedUsers);\n};\n\nconst logger2 = updatedUsers => console.table(updatedUsers);\n\n// âœ… Console checks\ndocument.querySelector('.js-task2').addEventListener('click', () => {\n  toggleUserState(users, 'Mango').then(logger2);\n  toggleUserState(users, 'Lux').then(logger2);\n});\n\n// ==================== ðŸ“Œ TASK 3 ====================\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  return new Promise((resolve, reject) => {\n    const delay = randomIntegerFromInterval(200, 500);\n\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n      if (canProcess) {\n        resolve({ id: transaction.id, time: delay });\n      }\n      reject(transaction.id);\n    }, delay);\n  });\n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n// âœ… Console checks\ndocument.querySelector('.js-task3').addEventListener('click', () => {\n  makeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n  makeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n  makeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n  makeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n});\n"],"sourceRoot":""}